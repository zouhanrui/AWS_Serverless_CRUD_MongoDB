AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS_Serverless_demo

  Sample SAM Template for AWS_Serverless_demo

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 2048
    Environment:
      Variables:
        SECRET_KEY: secret-info

Resources:
  MyApi:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: Test
      Auth:
        DefaultAuthorizer: JWTCustomAuthorizer
        Authorizers:
          JWTCustomAuthorizer:
            FunctionArn: !GetAtt JWTAuthFunction.Arn

  JWTAuthFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: Organizations_pkg/user/
      Handler: authorizer.app.lambda_handler
      Runtime: python3.8



  OrganizationUserCreate:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Organizations_pkg/user
      Handler: create.app.lambda_handler
      Runtime: python3.9
      Events:
        CompanyCreateUserPostAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user'
            Method: POST


  OrganizationUserRead:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Organizations_pkg/user/
      Handler: read.app.lambda_handler
      Runtime: python3.9
      Events:
        CompanyUserGetAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user'
            Method: GET


  OrganizationUserReadById:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Organizations_pkg/user
      Handler: read.app.lambda_handler
      Runtime: python3.9
      Events:
        CompanyUserGetAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user/{Id}'
            Method: GET


  OrganizationUserUpdateById:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Organizations_pkg/user
      Handler: update.app.lambda_handler
      Runtime: python3.9
      Events:
        CompanyUserUpdateByIdAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user/{Id}'
            Method: PUT



  OrganizationUserDeleteById:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Organizations_pkg/user
      Handler: delete.app.lambda_handler
      Runtime: python3.9
      Events:
        CompanyUserDeleteByIdAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user/{Id}'
            Method: DELETE


  OrganizationUserLogin:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: Organizations_pkg/user/
      Handler: login.app.lambda_handler
      Runtime: python3.8
      Events:
        LoginAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user/login'
            Method: POST
            Auth:
              Authorizer: NONE


  OrganizationRefreshToken:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: Organizations_pkg/user
      Handler: login.app.token_refresh
      Runtime: python3.8
      Events:
        LoginAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: '/user/refresh-token'
            Method: POST






